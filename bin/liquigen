#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'liquigen'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/liquigen` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/liquigen now"
  exit 64
end

class App
  extend GLI::App

  program_desc 'Generating the liquibase script like rails migration'

  version Liquigen::VERSION

  subcommand_option_handling :normal
  arguments :strict

  desc 'add table script'
  arg_name 'Describe arguments to add_table here'
  command :add_table do |c|
    c.action do |global_options, options, args|

      # Your command logic here

      # If you have any errors, just raise them
      # raise "that command made no sense"

      puts "add_table command ran"
    end
  end

  desc 'Describe modify_table here'
  arg_name 'Describe arguments to modify_table here'
  command :modify_table do |c|
    c.action do |global_options,options,args|
      puts "modify_table command ran"
    end
  end

  desc 'Describe drop_table here'
  arg_name 'Describe arguments to drop_table here'
  command :drop_table do |c|
    c.action do |global_options,options,args|
      puts "drop_table command ran"
    end
  end

  pre do |global,command,options,args|
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global,command,options,args|
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
